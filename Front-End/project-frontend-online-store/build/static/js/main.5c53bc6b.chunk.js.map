{"version":3,"sources":["assets/logo_frontendOnlineStore.svg","components/ShoppingCart.jsx","services/api.js","components/Categories.jsx","components/Header.jsx","components/Home.jsx","components/ProductDetail.jsx","components/Products.jsx","components/Content.jsx","components/Checkout.jsx","App.js","index.js"],"names":["module","exports","ShoppingCart","state","products","getProducts","bind","this","productsAdded","JSON","parse","localStorage","getItem","setState","listOfProductsInCart","map","product","name","id","thumb","quantity","className","key","data-testid","src","alt","emptyCartMessage","length","to","type","React","Component","getCategories","a","fetch","promise","json","result","getProductsFromCategoryAndQuery","categoryId","query","console","log","Categories","categorieList","getCategoriesFromApi","onHandlerRadio","event","target","productsReceived","results","props","history","push","pathname","categorie","htmlFor","onChange","withRouter","Header","inputText","onHandleInput","getProductsFromInput","value","logoFOS","placeholder","onClick","Home","ProductDetails","handleClickAddToCart","productId","productTitle","productThumb","Price","productPrice","existProduct","forEach","element","index","setItem","stringify","productAttr","saveInformations","location","productInfo","idProduct","titleProduct","thumbProduct","priceProduct","attrProduct","atributos","value_name","Products","price","title","thumbnail","attributes","spanPrice","priceFormated","toFixed","replace","priceCredit","priceCreditParcel","style","textDecoration","color","Content","Checkout","recoverCartProducts","recover","pricesToCalc","ListOfProductsToBuy","cost","totalCost","reduce","prev","crr","width","maxLength","minLength","App","exact","path","component","ProductDetail","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c53bc6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_frontendOnlineStore.74f2e4ab.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/Shopping.css';\n\nconst PRODUCTS_KEY = 'productsAdded';\n\nclass ShoppingCart extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      products: [],\n    };\n\n    this.getProducts = this.getProducts.bind(this);\n  }\n\n  componentDidMount() {\n    this.getProducts();\n  }\n\n  getProducts() {\n    const productsAdded = JSON.parse(localStorage.getItem(PRODUCTS_KEY));\n    if (productsAdded) {\n      this.setState({ products: productsAdded });\n    }\n  }\n\n  render() {\n    const { products } = this.state;\n\n    const listOfProductsInCart = products.map((product) => {\n      const { name, id, thumb, quantity } = product;\n\n      return (\n        <div className=\"product-card\">\n          <li key={ id }>\n            <h3 data-testid=\"shopping-cart-product-name\">{ name }</h3>\n            <div className=\"product-quantity\">\n              <img src={ thumb } alt={ name } />\n              <span data-testid=\"shopping-cart-product-quantity\">\n                Quantidade:\n                { ` ${quantity}` }\n              </span>\n            </div>\n          </li>\n        </div>\n      );\n    });\n    const emptyCartMessage = (\n      <h3 data-testid=\"shopping-cart-empty-message\">\n        Seu carrinho está vazio\n      </h3>);\n\n    return (\n      <section className=\"list-products-container\">\n        { products.length > 0 ? <ul className=\"list-products\">{listOfProductsInCart}</ul> : emptyCartMessage}\n        <Link to=\"/checkout\">\n          <button data-testid=\"checkout-products\" type=\"button\" className=\"button-shopping\">Realizar Compra</button>\n        </Link>\n      </section>\n    );\n  }\n}\n\nexport default ShoppingCart;\n","// codigo fonte produzido em pair programing com integrantes Degemar/Diego\n\nexport async function getCategories() {\n  const url = 'https://api.mercadolibre.com/sites/MLB/categories';\n  try {\n    const promise = await fetch(url);\n    const result = await promise.json();\n    return result;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  if (categoryId === '') {\n    try {\n      const promise = await fetch(`https://api.mercadolibre.com/sites/MLB/search?q=${query}`);\n      console.log(query);\n      const result = await promise.json();\n      return result;\n    } catch (error) {\n      return error;\n    }\n  }\n  try {\n    const promise = await fetch(`https://api.mercadolibre.com/sites/MLB/search?q=${categoryId}`);\n    const result = await promise.json();\n    return result;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function getProducts(productId) {\n  try {\n    const promise = await fetch(`https://api.mercadolibre.com/items/${productId}`);\n    const result = await promise.json();\n    return result;\n  } catch (error) {\n    return error;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { getCategories, getProductsFromCategoryAndQuery } from '../services/api';\nimport './css/Categories.css';\n\nclass Categories extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      categorieList: [],\n    };\n\n    this.getCategoriesFromApi = this.getCategoriesFromApi.bind(this);\n    this.onHandlerRadio = this.onHandlerRadio.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCategoriesFromApi();\n  }\n\n  // Função que faz a requisição à API e redireciona para a página com os produtos recebidos\n  async onHandlerRadio(event) {\n    const { id } = event.target;\n    const productsReceived = await getProductsFromCategoryAndQuery('', id);\n    const { results } = productsReceived;\n    // Nessa condição a função verifica se foi retornado algum produto\n    // Se conseguir retornar ele redireciona para a url que renderiza os produtos e envia a lista\n    if (results.length !== 0) {\n      const { history } = this.props;\n      history.push({\n        pathname: '/productsFromCategorie',\n        state: results,\n      });\n    }\n  }\n\n  // Faz a requisição para a API para retirnar as categorias\n  async getCategoriesFromApi() {\n    this.setState({ categorieList: await getCategories() });\n  }\n\n  render() {\n    const { categorieList } = this.state;\n    return (\n      <section className=\"categories categories-style\">\n        <h2> Categorias de Produtos </h2>\n        {categorieList.map((categorie) => (\n          <label\n            data-testid=\"category\"\n            key={ categorie.name }\n            htmlFor={ categorie.id }\n          >\n            <input\n              id={ categorie.id }\n              type=\"radio\"\n              name=\"categoria\"\n              onChange={ this.onHandlerRadio }\n            />\n            {categorie.name}\n          </label>\n        ))}\n      </section>\n    );\n  }\n}\n\nCategories.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default withRouter(Categories);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport logoFOS from '../assets/logo_frontendOnlineStore.svg';\nimport './css/Header.css';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      inputText: '',\n    };\n\n    this.onHandleInput = this.onHandleInput.bind(this);\n    this.getProductsFromInput = this.getProductsFromInput.bind(this);\n  }\n\n  onHandleInput(event) {\n    this.setState({ inputText: event.target.value });\n  }\n\n  // Função que faz a requisição à API e redireciona para a página com os produtos recebidos\n  async getProductsFromInput() {\n    const { inputText } = this.state;\n    const { history } = this.props;\n    const productsReceived = await getProductsFromCategoryAndQuery('', inputText);\n    const { results } = productsReceived;\n    // Aqui a função redireciona para a url que renderiza os produtos e envia a lista com esses produtos recebidos\n    history.push({\n      pathname: '/productsFromSearch',\n      state: results,\n    });\n  }\n\n  render() {\n    const { inputText } = this.state;\n    return (\n      <header>\n        <div className=\"section-header\">\n\n          <Link to=\"/\">\n            <img className=\"site-logo\" src={ logoFOS } alt=\"logo\" />\n          </Link>\n          <div className=\"search-box-style\">\n            <input\n              onChange={ this.onHandleInput }\n              value={ inputText }\n              type=\"text\"\n              data-testid=\"query-input\"\n              placeholder=\"Pesquisar...\"\n            />\n\n            <button\n              onClick={ this.getProductsFromInput }\n              type=\"button\"\n              data-testid=\"query-button\"\n              className=\"material-icons\"\n            >\n              search\n            </button>\n          </div>\n\n          <div className=\"sign-in\">\n            <span className=\"material-icons icon-user\">\n              manage_accounts\n            </span>\n            <span>\n              Entre\n              <br />\n              ou Cadastre-se\n            </span>\n          </div>\n\n          <div>\n            <Link data-testid=\"shopping-cart-button\" to=\"/cart\">\n              <button className=\"cart-button material-icons\" type=\"button\">\n                shopping_cart\n              </button>\n            </Link>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\n// Final Code\n\nHeader.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default withRouter(Header);\n","import React from 'react';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <section>\n        <h3 data-testid=\"home-initial-message\">\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </h3>\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PRODUCTS_KEY = 'productsAdded';\nclass ProductDetails extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      existProduct: false,\n      productId: '',\n      productTitle: '',\n      productThumb: '',\n      productPrice: 0,\n      productAttr: [],\n    };\n\n    this.handleClickAddToCart = this.handleClickAddToCart.bind(this);\n    this.saveInformations = this.saveInformations.bind(this);\n  }\n\n  componentDidMount() {\n    this.saveInformations();\n  }\n\n  // Função que aciona o clique do botão Comprar, faz a requisição na API do produto a ser adicionado no carrinho e retorna um objeto para o ShoppingCart contendo as informações do produto.\n  // O botão que recebe a função abaixo está no componente Products.jsx.\n  handleClickAddToCart = () => {\n    const { productId, productTitle, productThumb, productPrice } = this.state;\n    const result = {\n      name: productTitle,\n      thumb: productThumb,\n      Price: productPrice,\n      id: productId,\n      quantity: 1,\n    }; // Novo objeto gerado.\n\n    const productsAdded = JSON.parse(localStorage.getItem(PRODUCTS_KEY)); // Recupera os procutos adicionados\n    if (!productsAdded) { // Verifica se ele existe, caso não exista, ele cria um localstogare para os produtos\n      localStorage.setItem(PRODUCTS_KEY, JSON.stringify([]));\n      const products = JSON.parse(localStorage.getItem(PRODUCTS_KEY));\n      localStorage.setItem(PRODUCTS_KEY, JSON.stringify([...products, result]));\n      this.setState({ existProduct: true }); // Atualiza o estado informando que tem produto repedito e que a quantidade já foi atualizada\n    } else { // Caso já tenha o localstorage, ele vai fazer a verificação para ver se tem produto repetido\n      this.setState({ existProduct: true }); // Atualiza o estado informando que tem produto repedito e que a quantidade já foi atualizada\n      productsAdded.forEach((element, index) => {\n        if (element.id === result.id) {\n          productsAdded[index].quantity += 1; // Caso tenha produto repetido, ele atualiza a quantidade\n          localStorage.setItem(PRODUCTS_KEY, JSON.stringify(productsAdded));\n        }\n      });\n      const { existProduct } = this.state;\n      if (!existProduct) { // Caso não tenha produto repedito no localstorage, ele adiciona o novo produto ao final\n        console.log('veio aqui');\n        const products = JSON.parse(localStorage.getItem(PRODUCTS_KEY));\n        localStorage.setItem(PRODUCTS_KEY, JSON.stringify([...products, result]));\n      }\n    }\n  }\n\n  saveInformations() {\n    const { location } = this.props;\n\n    this.setState({\n      productId: location.productInfo.idProduct,\n      productTitle: location.productInfo.titleProduct,\n      productThumb: location.productInfo.thumbProduct,\n      productPrice: location.productInfo.priceProduct,\n      productAttr: location.productInfo.attrProduct,\n    });\n  }\n\n  render() {\n    const { productTitle, productThumb, productPrice, productAttr } = this.state;\n    return (\n      <section>\n        <p data-testid=\"product-detail-name\">{productTitle}</p>\n        <p>\n          `R$ $\n          { productPrice }\n          `\n        </p>\n        <img src={ productThumb } alt=\"product-name\" />\n        <section>\n          <p>Especificações Técnicas</p>\n          {productAttr && productAttr.map((atributos) => (\n            <div key={ atributos.id }>\n              <span>\n                {`${atributos.name}:${atributos.value_name}`}\n              </span>\n            </div>\n          ))}\n        </section>\n        <button\n          type=\"button\"\n          data-testid=\"product-detail-add-to-cart\"\n          className=\"card-button\"\n          onClick={ this.handleClickAddToCart }\n        >\n          Comprar\n        </button>\n      </section>\n    );\n  }\n}\nProductDetails.propTypes = {\n  location: PropTypes.func.isRequired,\n};\n\nexport default ProductDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './css/Products.css';\n\nconst PRODUCTS_KEY = 'productsAdded';\nclass Products extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      existProduct: false,\n      productId: '',\n      productTitle: '',\n      productThumb: '',\n      productPrice: 0,\n    };\n\n    this.handleClickAddToCart = this.handleClickAddToCart.bind(this);\n    this.saveInformations = this.saveInformations.bind(this);\n  }\n\n  componentDidMount() {\n    this.saveInformations();\n  }\n\n  // Função que aciona o clique do botão Comprar, faz a requisição na API do produto a ser adicionado no carrinho e retorna um objeto para o ShoppingCart contendo as informações do produto.\n  // O botão que recebe a função abaixo está no componente Products.jsx.\n  handleClickAddToCart = () => {\n    const { productId, productTitle, productThumb, productPrice } = this.state;\n    const result = {\n      name: productTitle,\n      thumb: productThumb,\n      price: productPrice,\n      id: productId,\n      quantity: 1,\n    }; // Novo objeto gerado.\n\n    const productsAdded = JSON.parse(localStorage.getItem(PRODUCTS_KEY)); // Recupera os procutos adicionados\n    if (!productsAdded) { // Verifica se ele existe, caso não exista, ele cria um localstogare para os produtos\n      localStorage.setItem(PRODUCTS_KEY, JSON.stringify([]));\n      const products = JSON.parse(localStorage.getItem(PRODUCTS_KEY));\n      localStorage.setItem(PRODUCTS_KEY, JSON.stringify([...products, result]));\n      this.setState({ existProduct: true }); // Atualiza o estado informando que tem produto repedito e que a quantidade já foi atualizada\n    } else { // Caso já tenha o localstorage, ele vai fazer a verificação para ver se tem produto repetido\n      this.setState({ existProduct: true }); // Atualiza o estado informando que tem produto repedito e que a quantidade já foi atualizada\n      productsAdded.forEach((element, index) => {\n        if (element.id === result.id) {\n          productsAdded[index].quantity += 1; // Caso tenha produto repetido, ele atualiza a quantidade\n          localStorage.setItem(PRODUCTS_KEY, JSON.stringify(productsAdded));\n        }\n      });\n      const { existProduct } = this.state;\n      if (!existProduct) { // Caso não tenha produto repedito no localstorage, ele adiciona o novo produto ao final\n        console.log('veio aqui');\n        const products = JSON.parse(localStorage.getItem(PRODUCTS_KEY));\n        localStorage.setItem(PRODUCTS_KEY, JSON.stringify([...products, result]));\n      }\n    }\n  }\n\n  saveInformations() {\n    const { id, title, thumbnail, price } = this.props;\n\n    this.setState({\n      productId: id,\n      productTitle: title,\n      productThumb: thumbnail,\n      productPrice: price,\n    });\n  }\n\n  render() {\n    const { id, title, thumbnail, price, attributes } = this.props;\n    const spanPrice = (<span> à vista</span>);\n    const priceFormated = price.toFixed(2).replace('.', ',');\n    const percent = 0.15;\n    const parcelBuy = 10;\n    let priceCredit = (price * percent) + price;\n    priceCredit = priceCredit.toFixed(2).replace('.', ',');\n    let priceCreditParcel = ((price * percent) + price) / parcelBuy;\n    priceCreditParcel = priceCreditParcel.toFixed(2).replace('.', ',');\n    return (\n      <div data-testid=\"product\" key={ id }>\n        <div className=\"card\">\n          <Link\n            to={ {\n              pathname: `/productDetail/${id}`,\n              productInfo: {\n                idProduct: id,\n                titleProduct: title,\n                thumbProduct: thumbnail,\n                priceProduct: price,\n                attrProduct: attributes,\n              },\n            } }\n            style={ { textDecoration: 'none', color: 'black' } }\n            data-testid=\"product-detail-link\"\n          >\n            <img className=\"card-img\" src={ thumbnail } alt=\"\" />\n            <div>\n              <span className=\"card-title\">{ title }</span>\n              <span className=\"card-price\">\n                {`R$ ${priceFormated}`}\n                {spanPrice}\n              </span>\n              <span className=\"card-price-credit\">\n                {`ou R$ ${priceCredit}`}\n              </span>\n              <span className=\"card-price-credit\">\n                {`10x de R$ ${priceCreditParcel} sem juros`}\n              </span>\n            </div>\n          </Link>\n          <button\n            id={ id }\n            type=\"button\"\n            data-testid=\"product-add-to-cart\"\n            className=\"card-button\"\n            onClick={ this.handleClickAddToCart }\n          >\n            + Adicionar ao Carrinho\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProducts.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  attributes: PropTypes.shape.isRequired,\n};\n\nexport default Products;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Products from './Products';\nimport './css/Products.css';\n\nclass Content extends React.Component {\n  render() {\n    // Recebe os produtos\n    const { location } = this.props;\n    return (\n      <section className=\"list_products\">\n        {location.state.map((product) => (\n          <Products\n            key={ product.id }\n            id={ product.id }\n            title={ product.title }\n            thumbnail={ product.thumbnail }\n            price={ product.price }\n            attributes={ product.attributes }\n          />\n        ))}\n      </section>\n    );\n  }\n}\n\nContent.propTypes = {\n  location: PropTypes.shape.isRequired,\n};\n\nexport default Content;\n","import React from 'react';\nimport './css/Checkout.css';\n\nclass Checkout extends React.Component {\n  // constructor() {\n  //   super();\n\n  //   this.state = {\n  //     productsToBuy: [],\n  //   };\n  // }\n\n  recoverCartProducts = () => {\n    const products = JSON.parse(localStorage.getItem('productsAdded'));\n    return products;\n  }\n\n  render() {\n    const recover = this.recoverCartProducts();\n    const pricesToCalc = [0];\n    const ListOfProductsToBuy = recover.map((product) => {\n      const { id, name, thumb, quantity, price } = product;\n      const cost = quantity * price;\n      pricesToCalc.push(cost);\n      return (\n        <li className=\"product\" key={ id }>\n          <div className=\"infos-products\">\n            <img src={ thumb } alt={ name } />\n            <span>{ name }</span>\n            <div className=\"divisor-name-price\" />\n            <span>{quantity}</span>\n            <div className=\"divisor-name-price\" />\n            <span className=\"price\">{`R$ ${cost.toFixed(2).replace('.', ',')}`}</span>\n            <span>{`ID do produto: ${id}`}</span>\n          </div>\n        </li>\n      );\n    });\n    const totalCost = pricesToCalc.reduce((prev, crr) => crr + prev);\n    return (\n      <section className=\"checkout-page\">\n        <div className=\"check-products\">\n          <h3>Revise seus Produtos</h3>\n          <ul className=\"products-list\">\n            {ListOfProductsToBuy}\n            <span className=\"totalCost\">\n              {'Valor Total: R$ '}\n              {totalCost.toFixed(2).replace('.', ',')}\n            </span>\n            <div className=\"more-info\">\n              <p>\n                Vendido com segurança e confiança pela\n              </p>\n              <span> Frontend Online Store ! </span>\n            </div>\n            <div className=\"divisor-items-checkout\" />\n          </ul>\n        </div>\n        <div className=\"buyer-infos\">\n          <h3>Informações do Comprador</h3>\n          <form>\n            <label htmlFor=\"name\">\n              <input\n                type=\"text\"\n                style={ { width: '250px' } }\n                name=\"name\"\n                data-testid=\"checkout-fullname\"\n                placeholder=\"Nome Completo\"\n              />\n            </label>\n            <label htmlFor=\"email\">\n              <input\n                type=\"email\"\n                style={ { width: '300px' } }\n                name=\"email\"\n                data-testid=\"checkout-email\"\n                placeholder=\"Email válido\"\n              />\n            </label>\n            <label htmlFor=\"CPF\">\n              <input\n                type=\"text\"\n                maxLength=\"11\"\n                name=\"CPF\"\n                data-testid=\"checkout-cpf\"\n                placeholder=\"CPF válido (sem pontos ou virgulas)\"\n              />\n            </label>\n            <label htmlFor=\"phone\">\n              <input\n                type=\"text\"\n                name=\"phone\"\n                maxLength=\"13\"\n                minLength=\"11\"\n                data-testid=\"checkout-phone\"\n                placeholder=\"Telefone/Celular\"\n              />\n            </label>\n            <label htmlFor=\"cep\">\n              <input\n                type=\"text\"\n                name=\"cep\"\n                maxLength=\"13\"\n                minLength=\"11\"\n                data-testid=\"checkout-cep\"\n                placeholder=\"CEP\"\n              />\n            </label>\n            <label htmlFor=\"address\">\n              <input\n                type=\"text\"\n                style={ { width: '600px' } }\n                name=\"address\"\n                maxLength=\"13\"\n                minLength=\"11\"\n                data-testid=\"checkout-address\"\n                placeholder=\"Endereço\"\n              />\n            </label>\n            <label htmlFor=\"news-req\">\n              <input\n                className=\"check\"\n                type=\"checkbox\"\n                name=\"news-req\"\n                data-testid=\"checkout-news-req\"\n              />\n              Deseja receber promoções e atualizações de produtos?\n            </label>\n            <label htmlFor=\"pol-req\">\n              <input\n                className=\"check\"\n                type=\"checkbox\"\n                name=\"pol-req\"\n                data-testid=\"checkout-pol-req\"\n              />\n              Concordo e afirmo que li a politica de uso de dados\n            </label>\n          </form>\n        </div>\n        <button type=\"button\"> Finalizar Compra </button>\n      </section>\n    );\n  }\n}\n\nexport default Checkout;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ShoppingCart from './components/ShoppingCart';\nimport Categories from './components/Categories';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport ProductDetail from './components/ProductDetail';\nimport Content from './components/Content';\nimport './App.css';\nimport Checkout from './components/Checkout';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Header />\n        <main>\n          <Categories />\n          <section className=\"main-page main-content\">\n            <Switch>\n              <Route exact path=\"/\" component={ Home } />\n              <Route path=\"/cart\" component={ ShoppingCart } />\n              <Route path=\"/productsFromSearch\" component={ Content } />\n              <Route path=\"/productsFromCategorie\" component={ Content } />\n              <Route exact path=\"/ProductDetail/:id\" component={ ProductDetail } />\n              <Route exact path=\"/checkout\" component={ Checkout } />\n            </Switch>\n          </section>\n        </main>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}